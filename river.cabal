-- This file has been generated from package.yaml by hpack version 0.28.2.
--
-- see: https://github.com/sol/hpack
--
-- hash: e30573758951ccffc68f9abb790a8b7f91be101a74219f1a6095f4c52d1515ff

cabal-version:  >= 1.10
name:           river
version:        0.1.0.0
description:    Please see the README on GitHub at <https://github.com/githubuser/river#readme>
homepage:       https://github.com/DerekMaffett/river#readme
bug-reports:    https://github.com/DerekMaffett/river/issues
author:         Derek Maffett
maintainer:     derekgmaffett@gmail.com
copyright:      2018 Derek Maffett
license:        MIT
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    ChangeLog.md
    README.md

source-repository head
  type: git
  location: https://github.com/DerekMaffett/river

library
  exposed-modules:
      Api.Bitbucket
      Api.Github
      Api.Jira
      Api.Jira.Assign
      Api.Jira.Base
      Api.Jira.Create
      Api.Jira.Get
      Api.Jira.Transitions
      Begin
      BugTracker
      Config
      Git
      Init
      Logger
      Merge
      Process
      Review
      Types
      Utils
  other-modules:
      Paths_river
  hs-source-dirs:
      core
  default-extensions: OverloadedStrings LambdaCase ExistentialQuantification RecordWildCards NamedFieldPuns DuplicateRecordFields DeriveGeneric DeriveAnyClass RecursiveDo ScopedTypeVariables TemplateHaskell FlexibleContexts
  build-depends:
      aeson
    , aeson-pretty
    , base >=4.7 && <5
    , bytestring
    , containers
    , data-default-class
    , directory
    , graphql
    , haskeline
    , hslogger
    , mtl
    , optparse-applicative
    , parsec
    , process
    , req
    , safe
    , safe-exceptions
    , split
    , text
    , typed-process
    , unordered-containers
    , vector
  default-language: Haskell2010

executable river
  main-is: Main.hs
  other-modules:
      Paths_river
  hs-source-dirs:
      cli
  default-extensions: OverloadedStrings LambdaCase ExistentialQuantification RecordWildCards NamedFieldPuns DuplicateRecordFields DeriveGeneric DeriveAnyClass RecursiveDo ScopedTypeVariables TemplateHaskell FlexibleContexts
  ghc-options: -threaded -rtsopts -optl-static -optl-pthread -with-rtsopts=-N -Wall
  cc-options: -static
  ld-options: -static -pthread
  build-depends:
      aeson
    , aeson-pretty
    , base >=4.7 && <5
    , bytestring
    , containers
    , data-default-class
    , directory
    , graphql
    , haskeline
    , hslogger
    , mtl
    , optparse-applicative
    , parsec
    , process
    , req
    , river
    , safe
    , safe-exceptions
    , split
    , text
    , typed-process
    , unordered-containers
    , vector
  default-language: Haskell2010

executable river-integration-tests
  main-is: IntegrationSpecs.hs
  other-modules:
      Paths_river
  hs-source-dirs:
      integration-tests
  default-extensions: OverloadedStrings LambdaCase ExistentialQuantification RecordWildCards NamedFieldPuns DuplicateRecordFields DeriveGeneric DeriveAnyClass RecursiveDo ScopedTypeVariables TemplateHaskell FlexibleContexts
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      QuickCheck
    , aeson
    , aeson-pretty
    , base >=4.7 && <5
    , bytestring
    , containers
    , data-default-class
    , directory
    , graphql
    , haskeline
    , hslogger
    , hspec
    , mtl
    , optparse-applicative
    , parsec
    , process
    , req
    , river
    , safe
    , safe-exceptions
    , split
    , text
    , typed-process
    , unordered-containers
    , vector
  default-language: Haskell2010

executable river-test
  main-is: Spec.hs
  other-modules:
      GitSpecs
      UtilsSpecs
      Paths_river
  hs-source-dirs:
      test
  default-extensions: OverloadedStrings LambdaCase ExistentialQuantification RecordWildCards NamedFieldPuns DuplicateRecordFields DeriveGeneric DeriveAnyClass RecursiveDo ScopedTypeVariables TemplateHaskell FlexibleContexts
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  build-depends:
      QuickCheck
    , aeson
    , aeson-pretty
    , base >=4.7 && <5
    , bytestring
    , containers
    , data-default-class
    , directory
    , graphql
    , haskeline
    , hslogger
    , hspec
    , mtl
    , optparse-applicative
    , parsec
    , process
    , req
    , river
    , safe
    , safe-exceptions
    , split
    , text
    , typed-process
    , unordered-containers
    , vector
  default-language: Haskell2010
