-- Initial app generated by cabal init.  For further
-- documentation, see http://haskell.org/cabal/users-guide/

name:                app
version:             0.1.0.0
-- synopsis:
-- description:
license:             BSD3
license-file:        LICENSE
author:              Derek Maffett
maintainer:          derekgmaffett@gmail.com
-- copyright:
-- category:
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

executable river
  main-is:             Main.hs
  other-modules:
      Api.Bitbucket
      Api.Github
      Api.Jira
      Api.Jira.Assign
      Api.Jira.Base
      Api.Jira.Create
      Api.Jira.Get
      Api.Jira.Transitions
      Begin
      BugTracker
      Config
      Git
      GUI
      Init
      Logger
      Merge
      Process
      Review
      Types
      Utils
  -- other-extensions:
  default-extensions: OverloadedStrings LambdaCase ExistentialQuantification RecordWildCards NamedFieldPuns DuplicateRecordFields DeriveGeneric DeriveAnyClass RecursiveDo ScopedTypeVariables TemplateHaskell FlexibleContexts
  ghc-options: -threaded -dynamic -rtsopts -with-rtsopts=-N -Wall
  build-depends:       
      aeson
    , aeson-pretty
    , base >=4.11 && <4.12
    , bytestring
    , containers
    , data-default-class
    , directory
    , file-embed
    , graphql
    , haskeline
    , hslogger
    , mtl
    , optparse-applicative
    , parsec
    , process
    , reflex
    , reflex-dom
    , req
    , safe
    , safe-exceptions
    , split
    , text
    , typed-process
    , unordered-containers
    , vector
  hs-source-dirs:      src
  default-language:    Haskell2010

executable river-integration-tests
  main-is: IntegrationSpecs.hs
  hs-source-dirs:
      integration-tests
      src
  default-extensions: OverloadedStrings LambdaCase ExistentialQuantification RecordWildCards NamedFieldPuns DuplicateRecordFields DeriveGeneric DeriveAnyClass RecursiveDo ScopedTypeVariables TemplateHaskell FlexibleContexts
  ghc-options: -threaded -dynamic -rtsopts -with-rtsopts=-N
  build-depends:
      QuickCheck
    , aeson
    , aeson-pretty
    , base >=4.7 && <5
    , bytestring
    , containers
    , data-default-class
    , directory
    , file-embed
    , graphql
    , haskeline
    , hslogger
    , hspec
    , mtl
    , optparse-applicative
    , parsec
    , process
    , reflex
    , reflex-dom
    , req
    , safe
    , safe-exceptions
    , split
    , text
    , typed-process
    , unordered-containers
    , vector
  default-language: Haskell2010

executable river-test
  -- type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      GitSpecs
      UtilsSpecs
      Config
      Git
      Logger
      Process
      Types
      Utils
  hs-source-dirs:
      test
      src
  default-extensions: OverloadedStrings LambdaCase ExistentialQuantification RecordWildCards NamedFieldPuns DuplicateRecordFields DeriveGeneric DeriveAnyClass RecursiveDo ScopedTypeVariables TemplateHaskell FlexibleContexts
  ghc-options: -threaded -dynamic -rtsopts -with-rtsopts=-N
  build-depends:
      QuickCheck
    , aeson
    , aeson-pretty
    , base >=4.7 && <5
    , bytestring
    , containers
    , data-default-class
    , directory
    , file-embed
    , graphql
    , haskeline
    , hslogger
    , hspec
    , mtl
    , optparse-applicative
    , parsec
    , process
    , reflex
    , reflex-dom
    , req
    , safe
    , safe-exceptions
    , split
    , text
    , typed-process
    , unordered-containers
    , vector
  default-language: Haskell2010
